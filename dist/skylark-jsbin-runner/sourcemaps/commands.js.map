{"version":3,"sources":["commands.js"],"names":["define","runner","utils","sandbox","commands","render","data","options","injectCSS","isActive","cssText","source","codes","css","injectCssText","console:run","cmd","eval","console:load:script","url","injectScript","err","postMessage","console:load:dom","html","injectDOM"],"mappings":";;;;;;;AAAAA,QACG,WACA,UACA,aACD,SAAUC,EAAOC,EAAMC,GAMrB,aAEA,IAAIC,GAKJC,OAAkB,SAAUC,GAC1B,GAAIA,EAAKC,QAAQC,WAAaL,EAAQM,WAAY,CAChD,IAAIC,EAAWJ,EAAKK,QAAWL,EAAKM,OAASN,EAAKM,MAAMC,IACxD,OAAOV,EAAQW,cAAcJ,GAE/B,OAAOP,EAAQE,OAAOC,IAMxBS,cAA0B,SAAUC,GAClCb,EAAQc,KAAKD,IAMfE,sBAAkC,SAAUC,GAC1ChB,EAAQiB,aAAaD,EAAK,SAAUE,GAClC,GAAIA,EAAK,OAAOpB,EAAOqB,YAAY,4BAA6BD,GAChEpB,EAAOqB,YAAY,8BAA+BH,MAOtDI,mBAA+B,SAAUC,GACvCrB,EAAQsB,UAAUD,EAAM,SAAUH,GAChC,GAAIA,EAAK,OAAOpB,EAAOqB,YAAY,yBAA0BD,GAC7DpB,EAAOqB,YAAY,gCAIvB,OAAOrB,EAAOG,SAAWA","file":"../commands.js","sourcesContent":["define([\r\n   \"./runner\",\r\n   \"./utils\",\r\n   \"./sandbox\",\r\n],function (runner,utils,sandbox) {\r\n  /** ============================================================================\r\n   * JS Bin Runner\r\n   * Accepts incoming postMessage events and updates a live iframe accordingly.\r\n   * ========================================================================== */\r\n  /*globals sandbox loopProtect window alert */\r\n    'use strict';\r\n\r\n    var commands = {};\r\n\r\n    /**\r\n     * Render a new preview iframe using the posted source\r\n     */\r\n    commands.render = function (data) {\r\n      if (data.options.injectCSS && sandbox.isActive()) {\r\n        let cssText =  data.source || (data.codes && data.codes.css);\r\n        return sandbox.injectCssText(cssText);\r\n      }\r\n      return sandbox.render(data);\r\n    };\r\n\r\n    /**\r\n     * Run console commands against the iframe's scope\r\n     */\r\n    commands['console:run'] = function (cmd) {\r\n      sandbox.eval(cmd);\r\n    };\r\n\r\n    /**\r\n     * Load script into the apge\r\n     */\r\n    commands['console:load:script'] = function (url) {\r\n      sandbox.injectScript(url, function (err) {\r\n        if (err) return runner.postMessage('console:load:script:error', err);\r\n        runner.postMessage('console:load:script:success', url);\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Load DOM into the apge\r\n     */\r\n    commands['console:load:dom'] = function (html) {\r\n      sandbox.injectDOM(html, function (err) {\r\n        if (err) return runner.postMessage('console:load:dom:error', err);\r\n        runner.postMessage('console:load:dom:success');\r\n      });\r\n    };\r\n\r\n    return runner.commands = commands;\r\n\r\n});"]}