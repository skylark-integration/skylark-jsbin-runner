{"version":3,"sources":["utils.js"],"names":["define","runner","window","location","origin","protocol","host","utils","prependChild","elem","child","insertBefore","firstChild","addEvent","event","fn","addEventListener","attachEvent","call","throttle","delay","throttled","context","this","args","arguments","cancel","timer","setTimeout","apply","clearTimeout","cleanse","s","replace","m","&","<","getIframeWindow","iframeElement","contentWindow","contentDocument","parentWindow"],"mappings":";;;;;;;AAAAA,QACG,YACD,SAAUC,GACR,aAoBGC,OAAOC,SAASC,SACnBF,OAAOC,SAASC,OAASF,OAAOC,SAASE,SAAS,KAAKH,OAAOC,SAASG,MA4BzE,OAAOL,EAAOM,OACZC,aA7CiB,SAASC,EAAMC,GAChCD,EAAKE,aAAaD,EAAOD,EAAKG,aA6C9BC,SA1Ca,SAASJ,EAAMK,EAAOC,GAC/BN,EAAKO,iBACPP,EAAKO,iBAAiBF,EAAOC,GAAI,GAEjCN,EAAKQ,YAAY,KAAOH,EAAO,WAE7B,OAAOC,EAAGG,KAAKT,EAAMP,OAAOY,UAqChCK,SA5Ba,SAAUJ,EAAIK,GAC3B,IACIC,EAAY,WACd,IAAIC,EAAUC,KAAMC,EAAOC,UAC3BJ,EAAUK,SACVL,EAAUM,MAAQC,WAAW,WAC3Bb,EAAGc,MAAMP,EAASE,IACjBJ,IAOL,OAJAC,EAAUK,OAAS,WACjBI,aAAaT,EAAUM,QAGlBN,GAePU,QAZY,SAAUC,GACtB,OAAQA,GAAG,IAAIC,QAAQ,QAAS,SAAUC,GAAK,OAAQC,IAAI,QAAQC,IAAI,QAAQF,MAY/EG,gBAToB,SAAUC,GAC5B,OAAOA,EAAcC,eAAiBD,EAAcE,gBAAgBC","file":"../utils.js","sourcesContent":["define([\r\n   \"./runner\"\r\n],function (runner) {\r\n    'use strict';\r\n  /**\r\n   * Utilities & polyfills\r\n   */\r\n\r\n  var prependChild = function(elem, child) { \r\n    elem.insertBefore(child, elem.firstChild); \r\n  };\r\n\r\n  var addEvent = function(elem, event, fn) {\r\n    if (elem.addEventListener) {\r\n      elem.addEventListener(event, fn, false);\r\n    } else {\r\n      elem.attachEvent(\"on\" + event, function() {\r\n        // set the this pointer same as addEventListener when fn is called\r\n        return(fn.call(elem, window.event));\r\n      });\r\n    }\r\n  };\r\n\r\n  if (!window.location.origin) {\r\n    window.location.origin = window.location.protocol+\"//\"+window.location.host;\r\n  }\r\n\r\n  var throttle = function (fn, delay) {\r\n    var timer = null;\r\n    var throttled = function () {\r\n      var context = this, args = arguments;\r\n      throttled.cancel();\r\n      throttled.timer = setTimeout(function () {\r\n        fn.apply(context, args);\r\n      }, delay);\r\n    };\r\n\r\n    throttled.cancel = function () {\r\n      clearTimeout(throttled.timer);\r\n    };\r\n\r\n    return throttled;\r\n  };\r\n\r\n  var cleanse = function (s) {\r\n    return (s||'').replace(/[<&]/g, function (m) { return {'&':'&amp;','<':'&lt;'}[m];});\r\n  };\r\n\r\n  var getIframeWindow = function (iframeElement) {\r\n      return iframeElement.contentWindow || iframeElement.contentDocument.parentWindow;\r\n  };\r\n\r\n  return runner.utils = {\r\n    prependChild,\r\n    addEvent,\r\n    throttle,\r\n    cleanse,\r\n    getIframeWindow\r\n  }\r\n});"]}